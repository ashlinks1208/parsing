import requests
import sqlalchemy as db
import telebot

engine = db.create_engine('sqlite:///myyDatabase.db')
conn = engine.connect()
metadata = db.MetaData()

vacancies = db.Table(
    "vacancies",
    metadata,
    db.Column("VacanciesNum", db.Integer, primary_key=True),
    db.Column("VacancieID", db.String, nullable=False),
    db.Column("VacancieTitle", db.String, nullable=False),
    db.Column("Company", db.String, nullable=False),
    db.Column("URL", db.String, nullable=False),
)
metadata.create_all(engine)


def get_vacancies(keyword):
    url = "https://api.hh.ru/vacancies"
    params = {
        "text": keyword,
        "area": 1,
        "per_page": 10,
    }
    headers = {
        "User-Agent": "Your User Agent",
    }

    response = requests.get(url, params=params, headers=headers)

    if response.status_code == 200:
        data = response.json()
        vacancies = data.get("items", [])
        vacancies_arr = []
        for vacancy in vacancies:
            vacancy_id = vacancy.get("id")
            vacancy_title = vacancy.get("name")
            vacancy_url = vacancy.get("alternate_url")
            company_name = vacancy.get("employer", {}).get("name")
            vacancies_arr.append(
                f"ID: {vacancy_id}\nTitle: {vacancy_title}\nCompany: {company_name}\nURL: {vacancy_url}\n")
            insertion_query = vacancies.insert().values([
                {"VacancieID": vacancy_id, "VacancieTitle": vacancy_title, "Company": company_name, "URL": vacancy_url},
            ])
            conn.execute(insertion_query)
            select_all_query = db.select(vacancies)
            metadata.create_all(engine)
            select_all_results = conn.execute(select_all_query)
    else:
        return [f"Request failed with status code: {response.status_code}"]
    return vacancies_arr


bot = telebot.TeleBot('7247889863:AAGuGRLfGr-9A5OxYmXyDp3WQ70rRQL40Fs')


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "/start":
        bot.send_message(message.from_user.id, "Введите название профессии ")
    else:
        a = len(get_vacancies(message.text))
        for i in range(a):
            bot.send_message(message.from_user.id, get_vacancies(message.text)[i])


bot.polling(none_stop=True, interval=0)
